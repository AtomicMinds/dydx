from dydx3.constants import API_HOST_GOERLI, API_HOST_MAINNET
from decouple import config # access env variable


# !!! SELECT MODE !!!
MODE = "DEVELOPMENT"

# Close all open position and orders
ABORT_ALL_POSITION = False

# Find Cointegrated Pairs
FIND_COINTEGRATED = True

# Place Trades
PLACE_TRADES = True

# Resolution
RESOLUTION = "1HOUR"

# Stats Window
WINDOW = 21

# Thresholds - Opening
MAX_HALF_LIFE = 24
ZSCORE = 1.5
USD_PER_TRADE = 50
USD_MIN_COLLATERAL = 1880

# Thresholds - Opening
CLOSE_AT_ZSCORE_CROSS = True

#  Ethereum address
ETHEREUM_ADDRESS = "0x4c13dfa4Fd6D0dfe63c73c3da0660404a2e42195"

# KEYS - Production
STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET = config("DYDX_API_KEY_MAINNET")
DYDX_API_SECRET_MAINNET = config("DYDX_API_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET = config("DYDX_API_PASSPHRASE_MAINNET")

# KEYS - Development
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")

# KEYS - Export
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE == "PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY = DYDX_API_KEY_MAINNET if MODE == "PRODUCTION" else DYDX_API_KEY_TESTNET
DYDX_API_SECRET = DYDX_API_SECRET_MAINNET if MODE == "PRODUCTION" else DYDX_API_SECRET_TESTNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNET if MODE == "PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET

#  HOST - Export
HOST = API_HOST_MAINNET if MODE == "PRODUCTION" else API_HOST_GOERLI

#  HTTP PROVIDER
HTTP_PROVIDER_MAINNET = "https://mainnet.infura.io/v3/911cde61cefc41fea13ef23145de40f5"
HTTP_PROVIDER_TESTNET = "https://eth-sepolia.g.alchemy.com/v2/-ItmG9czNJD7MD2uMQG6gG6_2XOqKGDZ"
# HTTP_PROVIDER_TESTNET = "https://sepolia.infura.io/v3/911cde61cefc41fea13ef23145de40f5"
HTTP_PROVIDER = HTTP_PROVIDER_MAINNET if MODE == "PRODUCTION" else HTTP_PROVIDER_TESTNET



